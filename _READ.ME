to view the DataTableDemo, import <CodeChallengeDemo /> into index.js or <App />.
There is a "sticky header" option that you can see in action by reszing the browser window.
I have not made this responsive.  If this were a production table, I would make it 100% responsive.
there are no settings or dependencies required to view the demo.  
To speed things up, I didn't style the buttons. I hope that's ok.
This can be re-written to use JSON data that's provided, rather than using it with a specific API.

Example to load into react.

in index.js

import { DataTableDemo } from './path/to/CodeChallengeDemo
const App = () => <DataTableDemo />
export deafult App

You can also re-use the DataTable by using the same API with.

<DataTable  
  keyLabels={[key]: label} pairs *required
  dataUrl='http://...' string *required
  tableId={tableId} unique identifier used for css classes, assigns a default if none,
/>

some notes:
CSS: i typically have used BEM css, but for this demo I'm targeting html tags that are children of class .data-table
Another way I would have coded the css would have been to use .data-table__tr, .data-table__td and not .data-table tr, .data-table td.

JSON: i normally take an array and convert it to a idKey object where [{id: 1, name: joey}, {id: 2, name: unmesh}] to { 1: { name: joey}, 2: {name: unmesh}} via reducer, 
this way it's easier to find the entry in the object rather than looping through an array... but for now I just stuck with an array.

FORM: i didn't put much into the form as forms are HUGE deal and I'd hate to slap one together, and if I were to use my own personal form component (wich rocks, by the way),
i'd have to include a few other packages as well and I just want to keep this simple.  if you're interested in seeing my forms, I can give a demo when the time comes.